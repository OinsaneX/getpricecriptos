{"version":3,"sources":["components/CoinRow.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["CoinRow","coin","name","symbol","current_price","className","src","image","alt","with","height","parseInt","price_change_percentage_24h","Table","coins","map","index","App","useState","listCoins","setListCoins","filterList","setfilterList","useEffect","getCoins","a","axios","get","then","response","data","type","onChange","e","value","newCoins","toLowerCase","includes","push","console","log","onTypeFilter","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAEe,SAASA,EAAT,GAA0B,IAARC,EAAO,EAAPA,KAC7B,OACI,+BACI,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,SACV,uCAAQF,EAAKG,cAAb,QACD,qBAAIC,UAAU,OAAd,cAAsB,qBAAKC,IAAKL,EAAKM,MAAOC,IAAI,GAAGC,KAAK,KAAKC,OAAO,UACpE,oBAAIL,UAAWM,SAASV,EAAKW,6BAA6B,EAAI,MAAQ,QAAtE,SAAgFX,EAAKW,iCCPjF,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,MAC3B,OACI,kCACE,gCACF,+BACA,+BAAI,sCAAJ,OACA,+BAAI,wCAAJ,OACQ,+BAAI,uCAAJ,OACA,+BAAI,uCAAJ,OACA,+BAAI,sCAAJ,YAKL,gCACCA,EAAMC,KAAI,SAACd,EAAMe,GAAP,OACN,cAAChB,EAAD,CAAqBC,KAAMA,GAAbe,WCyCfC,MAtDf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACFC,qBAAU,WACRC,MAEA,IAGF,IAAMA,EAAQ,uCAAG,sBAAAC,EAAA,sEAETC,IAAMC,IAAI,4HACfC,MAAK,SAAAC,GACJT,EAAaS,EAASC,MACtBR,EAAcO,EAASC,SALV,2CAAH,qDAoBZ,OACE,iCACE,mCAAQ,+CACR,oBAAIzB,UAAU,MAAd,2BAEA,uBAAO0B,KAAK,OAAOC,SAAU,SAACC,GAAD,OAff,SAACC,GACrB,IAAIC,EAAW,GAEfhB,EAAUJ,KAAI,SAAAd,GAAI,OAAIA,EAAKC,KAAKkC,cAAcC,SAASH,EAAME,gBAAkBD,EAASG,KAAKrC,MAC7FsC,QAAQC,IAAIL,GACZb,EAAca,GAU0BM,CAAaR,EAAES,OAAOR,aAIxD,kCACE,qBAAK7B,UAAU,MAAf,SACA,cAACQ,EAAD,CAAYC,MAAOO,QAM3B,iCACE,oBAAIhB,UAAU,SAAd,sDCzCasC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.55097af1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CoinRow({coin}) {\r\n    return (\r\n        <tr>\r\n            <td>{coin.name}</td>\r\n            <td>{coin.symbol}</td>\r\n            <td>{`${coin.current_price} $`}</td>\r\n           <td className=\"flex\"> <img src={coin.image} alt=\"\" with=\"25\" height=\"25\" /></td>\r\n           <td className={parseInt(coin.price_change_percentage_24h)<0 ? \"red\" : \"green\"}>{coin.price_change_percentage_24h}</td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CoinRow from './CoinRow'\r\nexport default function Table({coins}) {\r\n    return (\r\n        <table>\r\n          <thead>\r\n        <tr>\r\n        <td><h3>Name</h3> </td>\r\n        <td><h3>Symbol</h3> </td>\r\n                <td><h3>Price</h3> </td>\r\n                <td><h3>Image</h3> </td>\r\n                <td><h3>%24H</h3> </td>\r\n                \r\n        </tr>\r\n                    \r\n          </thead>\r\n           <tbody>\r\n           {coins.map((coin, index)=>(\r\n                <CoinRow key={index} coin={coin}/>\r\n            ))}\r\n           </tbody>\r\n\r\n         \r\n        </table>\r\n    )\r\n}\r\n","import './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TableCoins from './components/Table'\n\nfunction App() {\n\n  const [listCoins, setListCoins] = useState([])\n  const [filterList, setfilterList] = useState([])\nuseEffect(() => {\n  getCoins()\n  \n},[])\n\n\nconst getCoins = async()=>{\n\n  await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=brl&order=market_cap_desc&per_page=100&page=1&sparkline=false\")\n  .then(response =>{\n    setListCoins(response.data)\n    setfilterList(response.data)\n  } )\n}\n\n\nconst onTypeFilter= (value) => {\nvar newCoins = [];\n\nlistCoins.map(coin => coin.name.toLowerCase().includes(value.toLowerCase()) && newCoins.push(coin))\nconsole.log(newCoins)\nsetfilterList(newCoins)\n}\n\n\n\n  return (\n    <main>\n      <header><h2>GetCoinsPrice</h2>\n      <h5 className=\"m-0\">Type the name</h5>\n\n      <input type=\"text\" onChange={(e)=>onTypeFilter(e.target.value)}/>\n      </header>\n\n\n      <section>\n        <div className=\"col\">\n        <TableCoins coins={filterList}/>\n        </div>\n\n      </section>\n\n\n<footer>\n  <h3 className=\"shadow\">Developed by AleV_Dev ðŸ˜Ž</h3>\n</footer>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}